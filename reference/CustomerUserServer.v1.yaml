openapi: 3.0.0
info:
  title: Customer User Server
  version: '1.0'
  contact:
    email: jassayah@makor-capital.com
  description: API to manage users for games
servers:
  - url: 'http://localhost:3000'
paths:
  '/users/{id}':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
    get:
      summary: Get user by id
      responses:
        '200':
          description: User Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
              examples:
                JSON:
                  value:
                    id: 1
                    first_name: John
                    last_name: Doe
                    user_name: john.doe
                    email: john.doe@example.com
                    hashed_password: 3456dsgfpigh870adagol97gaOIUYf
                    birth_date: '1996-06-06'
                    created_at: '2019-08-24T14:15:22Z'
                    updated_at: '2019-08-24T14:15:22Z'
        '404':
          description: User Not Found
        '500':
          description: Internal Server Error
      operationId: getUserById
      description: Retrieve the information of the user with the matching user ID.
      parameters:
        - schema:
            type: string
          in: header
          name: Bearer
          description: Bearer Token to path in order to use the API
          required: true
      tags:
        - Users
    patch:
      summary: Update user by id
      operationId: updateUserById
      responses:
        '200':
          description: User Updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
              examples:
                JSON:
                  value:
                    id: 1
                    first_name: John
                    last_name: Doe
                    user_name: john.doe
                    email: john.doe@example.com
                    hashed_password: safddsaf98*&^basdfJ
                    birth_date: '1996-06-06'
                    created_at: '2019-07-24T14:15:22Z'
                    updated_at: '2019-08-24T14:15:22Z'
        '404':
          description: User Not Found
        '409':
          description: Email Already Taken
        '500':
          description: Internal Server Error
      description: Update the infromation of an existing user by its id.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                first_name:
                  type: string
                last_name:
                  type: string
                user_name:
                  type: string
                email:
                  type: string
                password:
                  type: string
                birth_date:
                  type: string
            examples: {}
        description: Patch user properties to update.
      parameters:
        - schema:
            type: string
          in: header
          name: Bearer
          description: Bearer Token
          required: true
      tags:
        - Users
  /users:
    post:
      summary: Create New User
      operationId: createNewUser
      responses:
        '200':
          description: User Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
              examples:
                JSON:
                  value:
                    id: 1
                    first_name: John
                    last_name: Doe
                    user_name: john.doe
                    email: john.doe@example.com
                    hashed_password: sdgfh*&huasdf87t
                    birth_date: '1996-06-06'
                    created_at: '2019-08-24T14:15:22Z'
                    updated_at: '2019-08-24T14:15:22Z'
        '400':
          description: Missing Required Information
        '409':
          description: Email Already Taken
        '500':
          description: Internal Server Error
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                first_name:
                  type: string
                last_name:
                  type: string
                user_name:
                  type: string
                email:
                  type: string
                  format: email
                password:
                  type: string
                confirm_password:
                  type: string
                birth_date:
                  type: string
                  format: date
              required:
                - first_name
                - last_name
                - user_name
                - email
                - password
                - confirm_password
                - birth_date
            examples:
              JSON:
                value:
                  first_name: string
                  last_name: string
                  user_name: string
                  email: user@example.com
                  password: string
                  confirm_password: string
                  birth_date: '2019-08-24'
        description: Post the necessary fields for the API to create a new user.
      description: Create a new user.
      tags:
        - Users
      security:
        - Bearer: []
    parameters: []
  /auth:
    post:
      summary: Authenticate to the API
      operationId: authenticate
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  token:
                    type: string
                    minLength: 1
                  refresh_token:
                    type: string
                    minLength: 1
                  validity_time:
                    type: string
                    minLength: 1
                required:
                  - token
                  - refresh_token
                  - validity_time
              examples:
                JSON:
                  value:
                    token: string
                    refresh_token: string
                    validity_time: string
        '400':
          description: Bad Request
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      description: Authenticate the user to the API
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user_name:
                  type: string
                password:
                  type: string
              required:
                - user_name
                - password
            examples:
              JSON:
                value:
                  user_name: john.doe
                  password: mysecretpassword
        description: User's credentials
      tags:
        - Auth
    parameters: []
  /get-user-with-token:
    get:
      summary: Your GET endpoint
      tags:
        - Users
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      operationId: getUserWithToken
      parameters: []
      security:
        - Bearer: []
      description: Get user details with the his token
components:
  schemas:
    User:
      title: User
      type: object
      description: ''
      x-examples:
        JSON:
          id: 1
          first_name: John
          last_name: Doe
          user_name: john.doe
          email: johndoe@example.com
          hashed_password: 2354jb2345uygfsda35bkjsKJyg8G3
          birth_date: '1996-06-06'
          created_at: '2019-08-24T14:15:22Z'
          updated_at: '2019-08-24T14:15:22Z'
      properties:
        id:
          type: integer
          description: Unique identifier for the given user.
        first_name:
          type: string
        last_name:
          type: string
        user_name:
          type: string
        email:
          type: string
          format: email
        hashed_password:
          type: string
        birth_date:
          type: string
          format: date
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
      required:
        - id
        - first_name
        - last_name
        - user_name
        - email
        - hashed_password
        - birth_date
        - created_at
        - updated_at
  securitySchemes:
    Bearer:
      type: http
      scheme: bearer
  responses: {}
tags:
  - name: Users
  - name: Auth
